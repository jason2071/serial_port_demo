package com.example.mydemo.utils;

import android.content.Context;
import android.hardware.usb.UsbDevice;
import android.hardware.usb.UsbManager;
import com.example.mydemo.manager.Contextor;
import java.util.ArrayList;
import java.util.Map;

public class DemoByte {
    public static byte[] writeCancel() {
        return new byte[]{
                /*(byte) 0x10, (byte) 0x02, (byte) 0x01, (byte) 0x00, (byte) 0x10, (byte) 0x00, (byte) 0x00, (byte) 0x00
                , (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0xAA
                , (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x04
                , (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xDD, (byte) 0x61, (byte) 0x10
                , (byte) 0x03*/

                (byte) 0x10, (byte) 0x02, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00
                , (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0xaa
                , (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x04
                , (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xd8, (byte) 0xc1, (byte) 0x10
                , (byte) 0x03
        };
    }

    public static byte[] deviceInfo() {
        return new byte[]{
                (byte) 0x10, (byte) 0x02, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                (byte) 0x00, (byte) 0x50, (byte) 0x0e, (byte) 0x01,(byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x62,
                (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x00,
                (byte) 0x00, (byte) 0x18, (byte) 0x92, (byte) 0x10, (byte) 0x03
        };
    }

    public static byte[] checkBalanceByte() {
        return new byte[]{
                (byte) 0x10, (byte) 0x02, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00
                , (byte) 0x00, (byte) 0x3c, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x13
                , (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x08
                , (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0xb3, (byte) 0xce, (byte) 0x13
                , (byte) 0x00, (byte) 0xbf, (byte) 0x4e, (byte) 0x10, (byte) 0x03
        };
    }

    public static int[] checkBalanceInt() {
        return new int[]{
                0x10, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00
                , 0x00, 0x3c, 0x00, 0x01, 0x00, 0x01, 0x00, 0x13
                , 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08
                , 0x00, 0x00, 0x00, 0x00, 0x00, 0xb3, 0xce, 0x13
                , 0x00, 0xbf, 0x4e, 0x10, 0x03
        };
    }

    public static ArrayList<UsbDevice> deviceName() {
        UsbManager manager = (UsbManager) Contextor.getInstance().getContext().getApplicationContext().getSystemService(Context.USB_SERVICE);
        Map<String, UsbDevice> devices = manager.getDeviceList();
        return new ArrayList<>(devices.values());
    }
}
